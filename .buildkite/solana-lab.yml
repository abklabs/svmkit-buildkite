x-default-agents: &default-agents
  agents:
    queue: "${AGENT_QUEUE:-default}"

env:
  AWS_DEFAULT_REGION: "${AWS_DEFAULT_REGION:-us-west-2}"
  GOOGLE_PROJECT: "${GOOGLE_PROJECT:-svmkit}"
  PULUMI_ACCESS_TOKEN: "${PULUMI_ACCESS_TOKEN:-}"
  PULUMI_STACK_NAME: "abklabs/buildkite-solana-lab"
  PULUMI_SVMKIT_DIR: "${PULUMI_SVMKIT_DIR:-./pulumi-svmkit}"
  SVMKIT_DIR: "${SVMKIT_DIR:-./svmkit}"

steps:
  - key: build
    label: ":hammer_and_wrench: Build svmkit and pulumi-svmkit"
    if: build.env("SVMKIT_DIR") != null || build.env("PULUMI_SVMKIT_DIR") != null
    <<: *default-agents

    command: |
      source .buildkite/lib.bash

      git::repos::add git@github.com:abklabs/svmkit.git svmkit 
      git::repos::add git@github.com:abklabs/pulumi-svmkit.git pulumi-svmkit 
      git::repos::summary
      git::repos::clone

      echo "--- Building svmkit && pulumi-svmkit"
      ( cd svmkit && make)
      ( cd pulumi-svmkit && make)
      tar -zcf pulumi-artifacts.tgz pulumi-svmkit/sdk pulumi-svmkit/bin

    artifact_paths:
      - pulumi-artifacts.tgz

  - key: solana-lab
    label: ":test_tube: solana-lab"
    <<: *default-agents
    depends_on: ["build"]
    concurrency: 1
    concurrency_group: pulumi-testing

    command: |
      source .buildkite/lib.bash


      git::repos::add git@github.com:abklabs/solana-lab.git solana-lab
      git::repos::add git@github.com:abklabs/tooling.git tooling --ssh-secret GITHUB_TOOLING_KEY

      # Add ssh keys (need them for tooling repo)
      git::repos::ssh::keys::add

      # Build kite section describing branches
      git::repos::summary

      # Get to work
      git::repos::clone

      if [[ -n "${PULUMI_SVMKIT_DIR:-}" ]]; then
        echo "-- Downloading Pulumi SDK and provider plugin artifacts"
        buildkite-agent artifact download pulumi-artifacts.tgz .
        tar zxf pulumi-artifacts.tgz
      fi

      CLOUD=aws  && . .buildkite/cloud-creds.sh
      CLOUD=gcp  && . .buildkite/cloud-creds.sh
      PULUMI_ACCESS_TOKEN=$(buildkite-agent secret get PULUMI_ACCESS_TOKEN)

      # Now that we are here, go to solana-lab:
      # 1) Install pulumi
      # 2) Create a stack
      # 4) run tests

      # Add with-*pulumi* scripts to the path
      PATH=$(realpath ./tooling/bin):$PATH;
      (
        cd solana-lab
        echo "--- Setting up for Test Suite"
        pulumi stack init "$$PULUMI_STACK_NAME" || pulumi stack select "$$PULUMI_STACK_NAME" || true
        # with-local-pulumi-svmkit handles pulumi install
        with-local-pulumi-svmkit ../pulumi-svmkit with-pulumi-up with-rpc-forwarded prove --ext .ts --ext .t test
      )

  - key: cleanup
    label: ":broom: Cleanup wayward stacks"
    <<: *default-agents
    command: |
      source .buildkite/lib.bash

      git::repos::add git@github.com:abklabs/solana-lab.git solana-lab
      git::repos::summary
      git::repos::clone

      if [[ -n "${PULUMI_SVMKIT_DIR:-}" ]]; then
        echo "-- Downloading Pulumi SDK and provider plugin artifacts"
        buildkite-agent artifact download pulumi-artifacts.tgz .
        tar zxf pulumi-artifacts.tgz
      fi

      CLOUD=aws  && . .buildkite/cloud-creds.sh
      CLOUD=gcp  && . .buildkite/cloud-creds.sh
      PULUMI_ACCESS_TOKEN=$(buildkite-agent secret get PULUMI_ACCESS_TOKEN)
      (
        cd solana-lab
        if pulumi stack select "$$PULUMI_STACK_NAME" 2>/dev/null; then
          echo "--- :warning: Stack '$$PULUMI_STACK_NAME' exists. Destroying..."
          pulumi install
          pulumi destroy --yes || echo "‚ùå Failed to destroy stack $$PULUMI_STACK_NAME"
          if pulumi stack rm --yes; then
             echo "--- :white_check_mark: Stack '$$PULUMI_STACK_NAME' cleanup complete."
          else
             echo "--- :x: Failed to destroy stack $$PULUMI_STACK_NAME"
             exit 1
          fi
        else
          echo "--- :white_check_mark: Stack '$$PULUMI_STACK_NAME' does not exist. Nothing to destroy."
        fi
      )

    depends_on: ["solana-lab"]
    allow_dependency_failure: true
